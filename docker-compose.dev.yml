version: '3.8'

services:
  db:
    container_name: spa-app-db-dev
    image: postgres:14.0-alpine
    restart: always
    environment:
      - POSTGRES_USER=${TYPEORM_USERNAME}
      - POSTGRES_PASSWORD=${TYPEORM_PASSWORD}
      - POSTGRES_DB=${TYPEORM_DATABASE}
    volumes:
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - ${TYPEORM_PORT}:${TYPEORM_PORT}
  server:
    container_name: spa-app-server-dev
    build:
      dockerfile: docker/server.dev.Dockerfile
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    depends_on:
      - db
    volumes:
      - ./packages/server/src:/usr/src/test-spa-app/server/src
    environment:
      - SERVER_PORT=${SERVER_PORT}
      - SERVER_URL=${SERVER_URL}
      - UI_PORT=${UI_PORT}
      - UI_URL=${UI_URL}
      - TYPEORM_CONNECTION=${TYPEORM_CONNECTION}
      - TYPEORM_USERNAME=${TYPEORM_USERNAME}
      - TYPEORM_PASSWORD=${TYPEORM_PASSWORD}
      - TYPEORM_DATABASE=${TYPEORM_DATABASE}
      - TYPEORM_PORT=${TYPEORM_PORT}
      - TYPEORM_HOST=db
  ui:
    container_name: spa-app-ui-dev
    volumes:
      - ./packages/ui/src:/usr/src/test-spa-app/ui/src
    build:
      context: .
      dockerfile: docker/ui.dev.Dockerfile
    ports:
      - ${UI_PORT}:${UI_PORT}
    depends_on:
      - db
      - server
    environment:
      - SERVER_PORT=${SERVER_PORT}
      - SERVER_URL=${SERVER_URL}
      - UI_PORT=${UI_PORT}
      - UI_URL=${UI_URL}
      - UI_HOST=${UI_HOST}
    env_file:
      - .env.dev
